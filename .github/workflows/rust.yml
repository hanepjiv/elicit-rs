name: Rust

on:
  schedule:
    - cron: "0 11 */3 * *"

  push:
    branches: [ "main" ]

  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  params:
    runs-on: ubuntu-latest

    outputs:
      date: ${{ steps.date.outputs.ret }}

      repos: ${{ steps.repos.outputs.ret }}

      cache-toolchain-path: |
        ~/.cargo/
        ~/.rustup/

      cache-toolchain-key: ${{ runner.os }}-${{ runner.arch }}-toolchain-${{ steps.date.outputs.ret }}

      cache-target-path: |
        ~/.cargo/registry/index/
        ~/.cargo/registry/cache/
        ~/.cargo/git/db/
        target/

      cache-target-key: ${{ runner.os }}-${{ runner.arch }}-target-${{ steps.repos.outputs.ret }}

    steps:
      - id: date
        env:
          TZ: "TZ"
        run: echo "ret=$(date +'%Y%0m%0d')" >> $GITHUB_OUTPUT

      - id: repos
        run: echo "ret=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_OUTPUT

  cargo:
    runs-on: ubuntu-latest

    needs: params

    steps:
      - name: Restore cached toolchain
        id: cache-toolchain-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ needs.params.outputs.cache-toolchain-path }}
          key: ${{ needs.params.outputs.cache-toolchain-key }}

      - name: Setup Rust Toolchain
        if: steps.cache-toolchain-restore.outputs.cache-hit != 'true'
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: "stable,beta,nightly"
          components: "clippy"
          cache: false

      - name: Install tools
        if: steps.cache-toolchain-restore.outputs.cache-hit != 'true'
        run: |
          cargo install cargo-audit

      - name: Save cached toolchain
        if: steps.cache-toolchain-restore.outputs.cache-hit != 'true'
        id: cache-toolchain-save
        uses: actions/cache/save@v4
        with:
          path: ${{ needs.params.outputs.cache-toolchain-path }}
          key: ${{ needs.params.outputs.cache-toolchain-key }}

      - uses: actions/checkout@v4

      - name: Run cargo update
        run: |
          source ~/.cargo/env
          cargo update
          cargo audit

      - name: Restore cached target
        id: cache-target-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ needs.params.outputs.cache-target-path }}
          key: ${{ needs.params.outputs.cache-target-key }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo
        run: |
          source ~/.cargo/env

          cargo +nightly update -Z minimal-versions

          cargo +stable test
          cargo +stable clippy
          cargo +stable test --features parking_lot
          cargo +stable clippy --features parking_lot

          cargo +beta test
          cargo +beta clippy
          cargo +beta test --features parking_lot
          cargo +beta clippy --features parking_lot

          cargo +nightly test
          cargo +nightly clippy
          cargo +nightly test --features parking_lot
          cargo +nightly clippy --features parking_lot

          cargo update

          cargo +stable test
          cargo +stable clippy
          cargo +stable test --features parking_lot
          cargo +stable clippy --features parking_lot

          cargo +beta test
          cargo +beta clippy
          cargo +beta test --features parking_lot
          cargo +beta clippy --features parking_lot

          cargo +nightly test
          cargo +nightly clippy
          cargo +nightly test --features parking_lot
          cargo +nightly clippy --features parking_lot

      - name: Save cached target
        if: steps.cache-target-restore.outputs.cache-hit != 'true'
        id: cache-target-save
        uses: actions/cache/save@v4
        with:
          path: ${{ needs.params.outputs.cache-target-path }}
          key: ${{ needs.params.outputs.cache-target-key }}-${{ hashFiles('**/Cargo.lock') }} # use new hash
