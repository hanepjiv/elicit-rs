name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust Toolchain for GitHub CI
      # You may pin to the exact commit or the version.
      # uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8
        uses: actions-rust-lang/setup-rust-toolchain@v1.10.1
        with:
          # Comma-separated list of Rust toolchain specifications. Last version becomes the default. -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification
          toolchain: stable,beta,nightly # optional
          # Target triple to install for this toolchain
          #target: # optional
          # Comma-separated list of components to be additionally installed
          components: clippy # optional
          # Automatically configure Rust cache
          #cache: # optional, default is true
          # Paths to multiple Cargo workspaces and their target directories, separated by newlines.
          #cache-workspaces: # optional
          # Additional non workspace directories to be cached, separated by newlines.
          #cache-directories: # optional
          # Also cache on workflow failures
          #cache-on-failure: # optional, default is true
          # An additional cache key that is added alongside the automatic `job`-based cache key and can be used to further differentiate jobs.
          #cache-key: # optional
          # Enable the Rust problem matcher
          #matcher: # optional, default is true
          # set RUSTFLAGS environment variable, set to empty string to avoid overwriting build.rustflags
          #rustflags: # optional, default is -D warnings
          # Setup the last installed toolchain as the default via `rustup override`
          #override: # optional, default is true

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [nightly, beta, stable]
        command: [test, clippy]
        features: ['', '--features parking_lot']
    steps:
        - uses: actions/checkout@v4
        - run: cargo +${{matrix.toolchain}} ${{matrix.command}} --verbose ${{matrix.features}}
